export async function POST(req) {
  try {
    const { bookingId, phone } = await req.json();
    
    console.log("üìå ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Frontend:", { bookingId, phone });

    if (!bookingId && !phone) {
      return NextResponse.json({ success: false, message: "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå" }, { status: 400 });
    }

    await connectMongoDB();

    let booking;
    if (bookingId) {
      booking = await Booking.findById(new mongoose.Types.ObjectId(bookingId));
    } else if (phone) {
      booking = await Booking.findOne({ phone });
    }

    if (!booking) {
      return NextResponse.json({ success: false, message: "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á" }, { status: 404 });
    }

    console.log("‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á:", booking);

    booking.status = "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å";
    await booking.save();

    return NextResponse.json({ success: true, message: "‚úÖ ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!" });

  } catch (error) {
    console.error("üî• Error ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á:", error);
    return NextResponse.json({ success: false, message: "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" }, { status: 500 });
  }
}
